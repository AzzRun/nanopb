/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon Aug 07 15:09:21 2017. */

#ifndef PB_UNIONPROTO_PB_H_INCLUDED
#define PB_UNIONPROTO_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

	/* Struct definitions */
	typedef struct _BulletInfo {
		int32_t X;
		int32_t Y;
		/* @@protoc_insertion_point(struct:BulletInfo) */
	} BulletInfo;

	typedef struct _PlayerInfo {
		int32_t X;
		int32_t Y;
		char Name[128];
		pb_callback_t bullets;
		/* @@protoc_insertion_point(struct:PlayerInfo) */
	} PlayerInfo;

	typedef struct _msgFiredBullet {
		int32_t X;
		int32_t Y;
		/* @@protoc_insertion_point(struct:msgFiredBullet) */
	} msgFiredBullet;

	typedef struct _msgGameData {
		int32_t GameMode;
		pb_callback_t players;
		/* @@protoc_insertion_point(struct:msgGameData) */
	} msgGameData;

	typedef struct _UnionMessage {
		bool has_msgFiredBullet;
		msgFiredBullet msgFiredBullet;
		bool has_lastGameData;
		msgGameData lastGameData;
		/* @@protoc_insertion_point(struct:UnionMessage) */
	} UnionMessage;

	/* Default values for struct fields */

	/* Initializer values for message structs */
#define msgFiredBullet_init_default              {0, 0}
#define BulletInfo_init_default                  {0, 0}
#define PlayerInfo_init_default                  {0, 0, "", {{NULL}, NULL}}
#define msgGameData_init_default                 {0, {{NULL}, NULL}}
#define UnionMessage_init_default                {false, msgFiredBullet_init_default, false, msgGameData_init_default}
#define msgFiredBullet_init_zero                 {0, 0}
#define BulletInfo_init_zero                     {0, 0}
#define PlayerInfo_init_zero                     {0, 0, "", {{NULL}, NULL}}
#define msgGameData_init_zero                    {0, {{NULL}, NULL}}
#define UnionMessage_init_zero                   {false, msgFiredBullet_init_zero, false, msgGameData_init_zero}

	/* Field tags (for use in manual encoding/decoding) */
#define BulletInfo_X_tag                         1
#define BulletInfo_Y_tag                         2
#define PlayerInfo_X_tag                         1
#define PlayerInfo_Y_tag                         2
#define PlayerInfo_Name_tag                      3
#define PlayerInfo_bullets_tag                   4
#define msgFiredBullet_X_tag                     1
#define msgFiredBullet_Y_tag                     2
#define msgGameData_GameMode_tag                 1
#define msgGameData_players_tag                  2
#define UnionMessage_msgFiredBullet_tag          1
#define UnionMessage_lastGameData_tag            2

	/* Struct field encoding specification for nanopb */
	extern const pb_field_t msgFiredBullet_fields[3];
	extern const pb_field_t BulletInfo_fields[3];
	extern const pb_field_t PlayerInfo_fields[5];
	extern const pb_field_t msgGameData_fields[3];
	extern const pb_field_t UnionMessage_fields[3];

	/* Maximum encoded size of messages (where known) */
#define msgFiredBullet_size                      22
#define BulletInfo_size                          22
	/* PlayerInfo_size depends on runtime parameters */
	/* msgGameData_size depends on runtime parameters */
#define UnionMessage_size                        (30 + msgGameData_size)

	/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define UNIONPROTO_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
  /* @@protoc_insertion_point(eof) */

#endif
